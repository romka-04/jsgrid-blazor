@using Microsoft.JSInterop
@inject IJSRuntime js
@typeparam T

<div id="@_elementId"></div>

@code
{
    readonly string _elementId = $"map-{Guid.NewGuid():D}";

    [Parameter]
    public EventCallback<RowEventArgs> RowClick { get; set; }
    [Parameter]
    public EventCallback<RowEventArgs> RowDoubleClick { get; set; }

    [Parameter]
    public IGridClient<T> Value { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await js.InvokeAsync<object>(
                "jsGridWrapper.init",
                _elementId, Value.Settings, DotNetObjectReference.Create(this));
        }
    }

    [JSInvokable]
    public async Task RowClickAsync(object item, int itemIndex)
    {
        await RowClick.InvokeAsync(new RowEventArgs(itemIndex, item));
    }
    
    [JSInvokable]
    public async Task RowDoubleClickAsync(object item, int itemIndex)
    {
        await RowDoubleClick.InvokeAsync(new RowEventArgs(itemIndex, item));
    }
}